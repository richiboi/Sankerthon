@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@900&display=swap");

* {
  font-family: Roboto;
  margin: 0;
  padding: 0;
}

/* Needs a rework */
.loadContainer {
  width: 80%;
  height: 80%;
  top: 10%;
  left: 10%;
  background-color: rgb(235, 215, 132);
  text-align: center;
  vertical-align: middle;
  display: flex;
  position: fixed;
  z-index: 7;
}

.loadContainer h1 {
  margin: auto;
  font-weight: normal;
  font-size: 3em;
}

.roundHeader {
  font-weight: 900;
  position: absolute;
  font-size: 2em;
  top: 60px;
  left: 80px;
  font-family: Montserrat;
}

.scoreContainer {
  width: 150px;
  height: 60px;
  position: absolute;
  top: 60px;
  right: 80px;
  text-align: center;
  border: 3px solid #878787;
  box-sizing: border-box;
  border-radius: 13px;
  background: white;
  box-shadow: 0px 4px 26px rgba(0, 0, 0, 0.08);
}

.scoreContainer p {
  font-weight: bold;
  font-size: 1.7em;
  padding: auto;
  margin: auto;
  line-height: 50px;
}

.qnaContainer {
  margin: 0 auto;
  width: 52vw;
  min-width: 450px;
  position: relative;
  top: 26vh;
  display: flex;
  flex-direction: column;
  align-content: center;
}

.questionContainer {
  text-align: center;
  overflow: hidden;

  padding: 1em;
  min-height: 17vh;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;

  background: linear-gradient(267.93deg, #38b3da 0.17%, #5f42d6 99.86%);
  box-shadow: 0px 4px 26px rgba(0, 0, 0, 0.18);
  border-radius: 24px;
  transition: all 1s ease-in-out;
}

.questionContainer h1,
h3,
h4 {
  color: white;
}

.questionContainer h3 {
  font-weight: 500;
  font-size: 1.7em;
  margin: auto;
}

.questionContainer h4 {
  font-size: 1.7em;
}

.questionContainer h1 {
  font-size: 4em;
}

.timerBase {
  position: absolute;
  width: 80px;
  height: 80px;
  background-color: white;
  border-radius: 50%;
  top: calc(26vh - 40px);
  right: calc(24vw - 40px);
  z-index: 1;
  border: 3px white solid;
}

.timerBaseSvg {
  transform: scaleX(-1);
  z-index: 3;
}

.timerBaseCircle {
  fill: none;
  stroke: none;
  z-index: 2;
}

.timerBasePathElapsed {
  stroke-width: 10px;
  stroke: grey;
  z-index: 7;
}

.timerBaseLabel {
  position: absolute;
  width: inherit;
  height: inherit;
  top: 0;

  display: flex;
  align-items: center;
  justify-content: center;

  font-size: 20px;
}

.timerBasePathRemaining {
  /* Just as thick as the original ring */
  stroke-width: 10px;

  /* Rounds the line endings to create a seamless circle */
  stroke-linecap: round;

  /* Makes sure the animation starts at the top of the circle */
  transform: rotate(90deg);
  transform-origin: center;

  /* One second aligns with the speed of the countdown timer */
  transition: 1s linear all;

  /* Allows the ring to change color when the color value updates */
  stroke: currentColor;
}

.nextButton {
  position: relative;

  width: 200px;
  height: 60px;
  line-height: 0;
  margin: 1.2em auto auto auto;
  padding: 0.8em 1.2em;

  color: #ffffff;
  background: #ffffff;
  border: 4px solid #20bf6b;
  background-color: rgb(23, 201, 100);
  border-radius: 6px;
  transition: all 0.3s ease 0s;
  font-size: 1.5em;
  font-weight: bold;
  transition: all 0.4s ease 0s, opacity 1s ease-in-out 0.7s;
}

.nextButton:hover {
  border-radius: 50px;
  background-color: rgb(16, 179, 87);
  border-color: rgb(8, 82, 40);
  transition: all 0.4s ease 0s;
  cursor: pointer;
}

.shapes {
  position: fixed;
  right: -20px;
  bottom: -10px;
  z-index: -5;
}

/* MCQ things */

.answerGrid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 1em;
  margin-top: 2em;
}

.answerBox {
  text-align: center;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1em 1.4em;
  font-size: 1.3em;
  font-weight: 300;

  background: #ffffff;
  border: 1px solid #cecece;

  box-shadow: 0px 4px 26px rgba(0, 0, 0, 0.08);
  border-radius: 24px;
  transition: all 1s ease-in-out;
}

.answerBox:hover {
  background-color: #adcbee;
  cursor: pointer;
}

/* Input things */

.inputContainer {
  margin: 1em;
  padding: 0em;
}

.answerForm {
  height: 5em;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-content: center;
}

.answerForm input[type="text"] {
  order: 1;
}

.answerForm button {
  order: 2;
  padding: 0;
  margin: 0;
  width: 170px;
  height: 40px;
  font-weight: bold;
  letter-spacing: 1px;
  border: 3px solid #8c82fc;
  background: #fff;
  color: #8c82fc;
  border-radius: 40px;
  cursor: pointer;
  overflow: hidden;
  transition: all 0.35s;
}

.answerForm button:hover {
  background: #8c82fc;
  color: #fff;
}

.answerForm button span {
  opacity: 1;
  visibility: visible;
  transition: all 0.35s;
}

.success {
  position: inherit;
  width: 100%;
  height: 100%;
  background: #fff;
  border-radius: 50%;
  z-index: 1;
  opacity: 0;
  visibility: hidden;
  transition: all 0.35s;
}

.success svg {
  margin: 0;
  width: 20px;
  height: 20px;
  fill: yellowgreen;
  transform-origin: 50% 50%;
  transform: translateY(-50%) rotate(0deg) scale(0);
  transition: all 0.35s;
}

.answerForm button.is_active {
  width: 40px;
  height: 40px;
}

.answerForm button.is_active .success {
  opacity: 1;
  visibility: visible;
}

.answerForm button.is_active .success svg {
  margin-top: 50%;
  transform: translateY(-50%) rotate(720deg) scale(1);
}

.answerForm button.is_active span {
  opacity: 0;
  visibility: hidden;
}
